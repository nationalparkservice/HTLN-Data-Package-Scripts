install.packages("devtools")
install.packages("devtools")
install.packages("tidayverse")
install.packages("tiday")
install.packages("tidy")
q()
install.packages("tidyverse")
library(tidyverse)
install.packages("palmerpenguins")
q()
hierarchy %>%
print(n = 10, width = Inf)
# this is a comment
# this file is my first R code for data science
library(tidyverse)
TSNhierarchy <- read_csv("C:\\Users\\growell\\HTLN-BreedingBird-Data-Package\\src\\Hierarchy_Taxa.csv")
# spec(TSNhierarchy)
hierarchy = as_tibble(TSNhierarchy)
hierarchy
hierarchy %>%
print(n = 10, width = Inf)
hierarchy %>%
View()
# figure out how to parse??
hierarchy %>%
View()
hierarchy |>
View()
hierarchy |>
mutate(
hierarchy_string2 = hierarchy_string,
)
hierarchy_string2
ierarchy |>
View()
hierarchy |>
View()
hierarchy
hierarchy |>
mutate(
hierarchy_string2 = hierarchy_string,
)
hierarchy |>
print(n = 10, width = Inf)
hierarchy |>
select(hierarchy_string)
hierarchy |>
select(hierarchy_string)
hierarchy |>
select(hierarchy_string)
print(n = 50, width = Inf)
hierarchy |>
select(hierarchy_string)
print(n = 20, width = Inf)
hierarchy |>
select(hierarchy_string)
hierarchy |>
select(hierarchy_string )
x <- hierarchy |>
select(hierarchy_string )
|.|
x <- hierarchy |>
select(hierarchy_string )
x
my_string <- hierarchy |>
select(hierarchy_string )
my_string
my_string |>
separate_wider_delim(
hierarchy_string,
delim = "-"
)
my_string |>
separate_wider_delim(
hierarchy_string,
delim = "-",
names = c("x", "y", "z"),
too_many = "drop"
)
my_string |>
separate_wider_delim(
hierarchy_string,
delim = "-",
names = c("col1", "col2", "col3", "col4",
"col5", "col6", "col7", "col8",
"col9", "col10", "col11" ),
too_many = "drop"
)
hierarchy
hierarchy |>
View()
my_string |>
separate_wider_delim(
hierarchy_string,
delim = "-",
names = c("col1", "col2", "col3", "col4",
"col5", "col6", "col7"),
too_many = "drop"
)
my_columns <- my_string |>
separate_wider_delim(
hierarchy_string,
delim = "-",
names = c("col1", "col2", "col3", "col4",
"col5", "col6", "col7"),
too_many = "drop"
)
my_columns
print(my_columns, nn = 207)
print(my_columns, n = 207)
my_columns <- my_string |>
separate_wider_delim(
hierarchy_string,
delim = "-",
names = c("col1", "col2", "col3", "col4",
"col5", "col6", "col7", "col8", "col9"),
too_many = "drop"
)
my_columns
print(my_columns, n = 207)
TSNlongnames
TSNlongnames <- read_csv(
"C:\\Users\\growell\\HTLN-BreedingBird-Data-Package\\src\\Hierarchy_Taxa.csv")
TSNlongnames <- read_csv(
"C:\\Users\\growell\\HTLN-BreedingBird-Data-Package\\src\\Itis_longnames.csv")
too_many = "drop"
hierarchy = as_tibble(TSNhierarchy)
TSNhierarchy <- read_csv(
"C:\\Users\\growell\\HTLN-BreedingBird-Data-Package\\src\\Hierarchy_Taxa.csv")
TSNlongnames <- read_csv(
"C:\\Users\\growell\\HTLN-BreedingBird-Data-Package\\src\\Itis_longnames.csv")
# select the hierarchy string column
# and parse the first 7 values in separate columns
hierarchy = as_tibble(TSNhierarchy)
longnames = as_tibble(TSNlongnames)
longnames
library(tidyverse)
TSNhierarchy <- read_csv(
"C:\\Users\\growell\\HTLN-BreedingBird-Data-Package\\src\\Hierarchy_Taxa.csv")
TSNlongnames <- read_csv(
"C:\\Users\\growell\\HTLN-BreedingBird-Data-Package\\src\\Itis_longnames.csv")
glimpse(TSNhierarchy)
glimpse(TSNlongnames)
hierarchy
my_columns <- my_string |>
separate_wider_delim(
hierarchy_string,
delim = "-",
names = c("col1", "col2", "col3", "col4",
"col5", "col6", "col7", "col8", "col9"),
too_many = "drop"
)
my_columns
print(my_columns, n = 207)
# This script processes the Active Projects dataset
library(tidyverse)
.libPaths()
q()
source("C:/Users/GRowell/Fast_import.R")
#See lines 2, 39, 41, 43, 45, and 51 to see if there is any information/code you need to change for your desired outputappendix.
#Imported the Excel files needed to make the appendix (the dataframe with all of the original data) and species look up table. Make necessary alterations in the import dataset field and name the appropriate data frames "appendix" and "SpeciesLookup" always!! Very important to keep the same title, will not work otherwise. Copy and paste the code at in the bottom left corner on the import dataset field window in for both dataframes and delete original code 3-10. REMEBEMBER TO USE THE NAMES "appendix" AND "SpeciesLookup" EXACTLY THE SAME!!!!
library(readxl)
appendix <- read_excel("~/Desktop/PIPE22appendix.xlsx",
sheet = "Sheet1", n_max = 14)
#See lines 2, 39, 41, 43, 45, and 51 to see if there is any information/code you need to change for your desired outputappendix.
#Imported the Excel files needed to make the appendix (the dataframe with all of the original data) and species look up table. Make necessary alterations in the import dataset field and name the appropriate data frames "appendix" and "SpeciesLookup" always!! Very important to keep the same title, will not work otherwise. Copy and paste the code at in the bottom left corner on the import dataset field window in for both dataframes and delete original code 3-10. REMEBEMBER TO USE THE NAMES "appendix" AND "SpeciesLookup" EXACTLY THE SAME!!!!
library(readxl)
appendix <- read_excel("PIPE22appendix.xlsx",
sheet = "Sheet1", n_max = 14)
install.packages("lubridate")
q()
install.packages("dataRetrieval")
q()
install.packages("data.table")
q()
install.packages("hrbrthemes")
q()
################################################################################
################################################################################
################### left off here <<<<<<<<<<<<<<<<<<<<<<<<<<<<
library(NPSdataverse)
library(tidyverse)
library(EML)
working_folder <- setwd("C:/users/growell/HTLN-BreedingBird-Data-Package/Package")
my_metadata <- EML::read_eml("HTLNBreedingBird_metadata.xml")
eml_validate(my_metadata)
################################################################################
################################################################################
#################### delete my_metadata.xml before running #####################
check_eml()
run_congruence_checks()
# if your data package is somewhere else, specify that:
# run_congruence_checks("C:/Users/<yourusername>/Documents/my_data_package")
#EMLeditor::set_abstract(my_metadata, abstract, force = FALSE, NPS = TRUE)
## Upload your data package
# If everything checked out, you should be ready to upload your data package!
# We recommend using `upload_data_package()` to accomplish this. The function
# automatically checks your DOI and uploads to the correct reference on DataStore.
# All of your files for the data package need to be in the same folder, there can
# be only one .xml file (ending in "_metadata.xml") and all the other files should
# be data files in .csv format. Each individual file should be < 32Mb.  If you have
# files > 32Mb, you will need to upload them manually using the web interface on DataStore.
# this assumes your data package is in the current working directory
################################################################################
################################################################################
################### left off here <<<<<<<<<<<<<<<<<<<<<<<<<<<<
library(NPSdataverse)
library(tidyverse)
library(EML)
working_folder <- setwd("C:/users/growell/HTLN-BreedingBird-Data-Package/Package")
my_metadata <- EML::read_eml("HTLNBreedingBird_metadata.xml")
eml_validate(my_metadata)
################################################################################
################################################################################
#################### delete my_metadata.xml before running #####################
check_eml()
run_congruence_checks()
################################################################################
################################################################################
################### left off here <<<<<<<<<<<<<<<<<<<<<<<<<<<<
library(NPSdataverse)
library(tidyverse)
library(EML)
working_folder <- setwd("C:/users/growell/HTLN-BreedingBird-Data-Package/EML")
my_metadata <- EML::read_eml("HTLNBreedingBird_metadata.xml")
eml_validate(my_metadata)
################################################################################
################################################################################
#################### delete my_metadata.xml before running #####################
check_eml()
working_folder <- setwd("C:/users/growell/HTLN-BreedingBird-Data-Package/EML")
check_eml()
rlang::last_trace()
check_eml("C:/users/growell/HTLN-BreedingBird-Data-Package/EML")
run_congruence_checks()
run_congruence_checks("C:/users/growell/HTLN-BreedingBird-Data-Package/EML")
################################################################################
################################################################################
################### left off here <<<<<<<<<<<<<<<<<<<<<<<<<<<<
library(NPSdataverse)
library(tidyverse)
library(EML)
working_folder <- setwd("C:/users/growell/HTLN-BreedingBird-Data-Package/Package")
my_metadata <- EML::read_eml("HTLNBreedingBird_metadata.xml")
eml_validate(my_metadata)
################################################################################
################################################################################
#################### delete my_metadata.xml before running #####################
check_eml("C:/users/growell/HTLN-BreedingBird-Data-Package/Package")
run_congruence_checks("C:/users/growell/HTLN-BreedingBird-Data-Package/Package")
getwd()
upload_data_package()
upload_data_package("C:/users/growell/HTLN-BreedingBird-Data-Package/Package)
upload_data_package("C:/users/growell/HTLN-BreedingBird-Data-Package/Package)
upload_data_package("C:/users/growell/HTLN-BreedingBird-Data-Package/Package")
1
upload_data_package("C:/users/growell/HTLN-BreedingBird-Data-Package/Package")
q()
